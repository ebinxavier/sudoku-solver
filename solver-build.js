"use strict";function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(a,b){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a)){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}}function _arrayWithHoles(a){if(Array.isArray(a))return a}function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var Sudoku=function(){function a(b){if(_classCallCheck(this,a),Array.isArray(b[0]))this.state=b;else if("string"==typeof b){this.state=[];for(var c,d=0;9>d;d++)c=b.slice(9*d,9*d+9),this.state.push(c.split("").map(function(a){return+a}))}this.allNumbers=[1,2,3,4,5,6,7,8,9]}return _createClass(a,[{key:"getRow",value:function getRow(a){return this.state[a]}},{key:"getColumn",value:function getColumn(a){return this.state.map(function(b){return b[a]})}},{key:"chechNumberExistsInRow",value:function chechNumberExistsInRow(a,b){return this.getRow(a).includes(b)}},{key:"chechNumberExistsInColumn",value:function chechNumberExistsInColumn(a,b){return this.getColumn(a).includes(b)}},{key:"getPossibleValues",value:function getPossibleValues(a,b){var c=this;return this.state[a][b]?[]:this.allNumbers.filter(function(d){return!c.chechNumberExistsInColumn(b,d)&&!c.chechNumberExistsInRow(a,d)})}},{key:"print",value:function print(){this.state.map(function(){})}},{key:"getNextEmptyPosition",value:function getNextEmptyPosition(){var a,b;return this.state.some(function(c,d){return c.some(function(c,e){if(0===c)return a=d,b=e,!0})}),[a,b]}}]),a}(),count=0,gameSolved=!1,recursionLimit=1e7,clone=function(a){return a.map(function(a){return _toConsumableArray(a)})},solve=function(a){if(!gameSolved){var b=a.getNextEmptyPosition(),c=_slicedToArray(b,2),d=c[0],e=c[1];if(void 0===d||void 0===e)return a.print(),void(gameSolved=a.state);var f=a.getPossibleValues(d,e);f.forEach(function(b){if(count++<recursionLimit){var c=clone(a.state);c[d][e]=b;var f=new Sudoku(c);solve(f)}})}},board=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,3,0,8,5],[0,0,1,0,2,0,0,0,0],[0,0,0,5,0,7,0,0,0],[0,0,4,0,0,0,1,0,0],[0,9,0,0,0,0,0,0,0],[5,0,0,0,0,0,0,7,3],[0,0,2,0,1,0,0,0,0],[0,0,0,0,4,0,0,0,9]];function solveHandler(){var a="";try{for(var c=0;9>c;c++)for(var d,e=0;9>e;e++){if(d=+document.getElementById(""+c+e).value,0>d||9<d||isNaN(d))throw new Error("Error");a+=d}}catch(a){return void alert("Please enter valid numbers!")}var b=new Sudoku(a);if(b.print(),solve(b),!gameSolved)alert("Unable to solve in",recursionLimit," steps!");else{for(var f=0;9>f;f++)for(var g=0;9>g;g++)document.getElementById(""+f+g).value=gameSolved[f][g];alert("Solved")}}
